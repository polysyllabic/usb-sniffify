// SPDX-License-Identifier: GPL-2.0-only

/*----------------------------------------------------------------------*/

#include <stdint.h>
#include "ps5_generated.h"

#define PS5_STRING

#define BCD_USB		0x0200

//#define USB_VENDOR	0x1d6b
//#define USB_PRODUCT	0x0104
//#define USB_VENDOR	0x0525
//#define USB_PRODUCT	0xa4a0
#define USB_VENDOR	0x054c
#define USB_PRODUCT	0x0ce6

#define STRING_ID_MANUFACTURER	1
#define STRING_ID_PRODUCT	2
#define STRING_ID_SERIAL	0
#define STRING_ID_CONFIG	0
#define STRING_ID_INTERFACE	0

#define EP_MAX_PACKET_CONTROL	64
//#define EP_MAX_PACKET_INT	64

// struct usb_device_descriptor usb_device = {
#define B_DEVICE_CLASS 0
#define B_DEVICE_SUBCLASS 0
#define B_DEVICE_PROTOCOL 0
#define BCD_DEVICE 0x0100
#define NUM_COFIGURATIONS 1

// struct usb_config_descriptor usb_config = {
#define B_NUM_INTERFACES 4
#define B_CONFIGURATION_VALUE 1
#define B_MAX_POWER 0x32*5

#define B_INTERVAL 6

// Assigned dynamically.
#define EP_NUM_INT_IN	0x0

#define REPORT_ID_BT_MAC 0x81
#define REPORT_ID_CALIBRATION 0x02
#define REPORT_ID_HARDWARE_FIRMWARE 0xa3
#define REPORT_NOIDEAWTF 0x12


const char manufacturerString[] = "Sony Interactive Entertainment";
const char productString[] = "Wireless Controller";

const char usb_hid_report[] = {
	0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
	0x09, 0x05,        // Usage (Game Pad)
	0xA1, 0x01,        // Collection (Application)
	0x85, 0x01,        //   Report ID (1)
	0x09, 0x30,        //   Usage (X)
	0x09, 0x31,        //   Usage (Y)
	0x09, 0x32,        //   Usage (Z)
	0x09, 0x35,        //   Usage (Rz)
	0x09, 0x33,        //   Usage (Rx)
	0x09, 0x34,        //   Usage (Ry)
	0x15, 0x00,        //   Logical Minimum (0)
	0x26, 0xFF, 0x00,  //   Logical Maximum (255)
	0x75, 0x08,        //   Report Size (8)
	0x95, 0x06,        //   Report Count (6)
	0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
	0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
	0x09, 0x20,        //   Usage (0x20)
	0x95, 0x01,        //   Report Count (1)
	0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
	0x05, 0x01,        //   Usage Page (Generic Desktop Ctrls)
	0x09, 0x39,        //   Usage (Hat switch)
	0x15, 0x00,        //   Logical Minimum (0)
	0x25, 0x07,        //   Logical Maximum (7)
	0x35, 0x00,        //   Physical Minimum (0)
	0x46, 0x3B, 0x01,  //   Physical Maximum (315)
	0x65, 0x14,        //   Unit (System: English Rotation, Length: Centimeter)
	0x75, 0x04,        //   Report Size (4)
	0x95, 0x01,        //   Report Count (1)
	0x81, 0x42,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
	0x65, 0x00,        //   Unit (None)
	0x05, 0x09,        //   Usage Page (Button)
	0x19, 0x01,        //   Usage Minimum (0x01)
	0x29, 0x0F,        //   Usage Maximum (0x0F)
	0x15, 0x00,        //   Logical Minimum (0)
	0x25, 0x01,        //   Logical Maximum (1)
	0x75, 0x01,        //   Report Size (1)
	0x95, 0x0F,        //   Report Count (15)
	0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
	0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
	0x09, 0x21,        //   Usage (0x21)
	0x95, 0x0D,        //   Report Count (13)
	0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
	0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
	0x09, 0x22,        //   Usage (0x22)
	0x15, 0x00,        //   Logical Minimum (0)
	0x26, 0xFF, 0x00,  //   Logical Maximum (255)
	0x75, 0x08,        //   Report Size (8)
	0x95, 0x34,        //   Report Count (52)
	0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
	0x85, 0x02,        //   Report ID (2)
	0x09, 0x23,        //   Usage (0x23)
	0x95, 0x2F,        //   Report Count (47)
	0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x05,        //   Report ID (5)
	0x09, 0x33,        //   Usage (0x33)
	0x95, 0x28,        //   Report Count (40)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x08,        //   Report ID (8)
	0x09, 0x34,        //   Usage (0x34)
	0x95, 0x2F,        //   Report Count (47)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x09,        //   Report ID (9)
	0x09, 0x24,        //   Usage (0x24)
	0x95, 0x13,        //   Report Count (19)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x0A,        //   Report ID (10)
	0x09, 0x25,        //   Usage (0x25)
	0x95, 0x1A,        //   Report Count (26)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x20,        //   Report ID (32)
	0x09, 0x26,        //   Usage (0x26)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x21,        //   Report ID (33)
	0x09, 0x27,        //   Usage (0x27)
	0x95, 0x04,        //   Report Count (4)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x22,        //   Report ID (34)
	0x09, 0x40,        //   Usage (0x40)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x80,        //   Report ID (-128)
	0x09, 0x28,        //   Usage (0x28)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x81,        //   Report ID (-127)
	0x09, 0x29,        //   Usage (0x29)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x82,        //   Report ID (-126)
	0x09, 0x2A,        //   Usage (0x2A)
	0x95, 0x09,        //   Report Count (9)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x83,        //   Report ID (-125)
	0x09, 0x2B,        //   Usage (0x2B)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x84,        //   Report ID (-124)
	0x09, 0x2C,        //   Usage (0x2C)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0x85,        //   Report ID (-123)
	0x09, 0x2D,        //   Usage (0x2D)
	0x95, 0x02,        //   Report Count (2)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0xA0,        //   Report ID (-96)
	0x09, 0x2E,        //   Usage (0x2E)
	0x95, 0x01,        //   Report Count (1)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0xE0,        //   Report ID (-32)
	0x09, 0x2F,        //   Usage (0x2F)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0xF0,        //   Report ID (-16)
	0x09, 0x30,        //   Usage (0x30)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0xF1,        //   Report ID (-15)
	0x09, 0x31,        //   Usage (0x31)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0xF2,        //   Report ID (-14)
	0x09, 0x32,        //   Usage (0x32)
	0x95, 0x0F,        //   Report Count (15)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0xF4,        //   Report ID (-12)
	0x09, 0x35,        //   Usage (0x35)
	0x95, 0x3F,        //   Report Count (63)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0x85, 0xF5,        //   Report ID (-11)
	0x09, 0x36,        //   Usage (0x36)
	0x95, 0x03,        //   Report Count (3)
	0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
	0xC0,              // End Collection

	// 273 bytes

};

//typedef struct
//{
//  uint8_t  reportId;                                 // Report ID = 0x81 (129) sony_check_add() sony:hid
//													 // Collection: CA:GamePad
//  uint8_t  VEN_GamePad0021[6];                       // Usage 0xFF800021: , Value = 0 to 255, Physical = Value x 21 / 17
//} featureReport81_t;

//featureReport81_t blueMacAddress =
//{
//  .reportId = 0x81,                                 // Report ID = 0x81 (129) sony_check_add() sony:hid
//													 // Collection: CA:GamePad
//	.VEN_GamePad0021 = {
//		0x11, 0x22, 0x33, 0x44, 0x55, 0x66
//	},                       // Usage 0xFF800021: , Value = 0 to 255, Physical = Value x 21 / 17
//};

//typedef struct
//{
//  uint8_t  reportId;                                 // Report ID = 0x02 (2) dualshock4_get_calibration_data() https://github.com/torvalds/linux/blob/master/drivers/hid/hid-sony.c
//													 // Collection: CA:GamePad
//  uint8_t  VEN_GamePad0024[36];                      // Usage 0xFF000024: , Value = 0 to 255, Physical = Value x 21 / 17
//} featureReport02_t;

//featureReport02_t calibrationData =
//{
//	.reportId = 0x02,
//	.VEN_GamePad0024 = {
////		0x00,0x00, //gyro_pitch_bias
////		0x00,0x00, //gyro_yaw_bias
////		0x00,0x00, //gyro_roll_bias
////		0x01,0x00, // pithc plus
////		0x00,0x00, // pithc minus
////		0x01,0x00, // yaw plus
////		0x00,0x00, // yaw minuw
////		0x01,0x00, // roll plus
////		0x00,0x00, // roll minus
////		0x01,0x00, // gyro speed plu
////		0x00,0x00, // gyro speed minus
////		0x01,0x00, // x plus
////		0x00,0x00, // x minus
////		0x01,0x00, // y plus
////		0x00,0x00, // y minus
////		0x01,0x00, // z plus
////		0x00,0x00, // z minus
////		0x00,0x00, // ?
//		0x15, 0x00 ,
//		0x04 , 0x00 ,
//		0x09 , 0x00 ,
//		0x0b , 0x22 ,
//		0x22 , 0xde ,
//		0xb6 , 0x22 ,
//		0x4a , 0xdd ,
//		0x05 , 0x24 ,
//		0x02 , 0xdc ,
//		0x1c , 0x02 ,
//		0x1c , 0x02 ,
//		0xfc , 0x1f ,
//		0x03 , 0xe0 ,
//		0x83 , 0x20 ,
//		0x7d , 0xdf ,
//		0xca , 0x1f ,
//		0x36 , 0xe0 ,
//		0x06 , 0x00
//	}
//};

//typedef struct
//{
//  uint8_t  reportId;                                 // Report ID = 0xA3 (163) dualshock4_get_version_info() sony:hid
//													 // Collection: CA:GamePad
//  uint8_t  VEN_GamePad0043[48];                      // Usage 0xFF800043: , Value = 0 to 255, Physical = Value x 21 / 17
//} featureReportA3_t;

//featureReportA3_t hardFirmVersion = {
//	.reportId = 0xa3,
//	.VEN_GamePad0043 = {
////		0, 0, 0, 0, 0, 0, 0,
////		0, 0, 0, 0, 0, 0, 0, 0,
////		0, 0, 0, 0, 0, 0, 0, 0,
////		0, 0, 0, 0, 0, 0, 0, 0,
////		0, 0, 0,
////		0x00, 0x74,
////		0, 0, 0, 0,
////		0x07, 0x80,
////		0, 0, 0, 0, 0
//		0x4a, 0x75 , 0x6c , 0x20 , 0x31 , 0x31 , 0x20 , 0x32 , 0x30 , 0x31 , 0x36 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x31 , 0x31 , 0x3a , 0x30 , 0x38 , 0x3a , 0x32 , 0x32 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x01 , 0x00 , 0x74 , 0x01 , 0x00 , 0x00 , 0x00 , 0x07 , 0x80 , 0x00 , 0x05 , 0x00 , 0x80 , 0x03 , 0x00
//	}
//
//};

//typedef struct
//{
//  uint8_t  reportId;                                 // Report ID = 0x12 (18)
//													 // Collection: CA:GamePad
//  uint8_t  VEN_GamePad0021[15];                      // Usage 0xFF020021: , Value = 0 to 255, Physical = Value x 21 / 17
//} featureReport12_t;

//featureReport12_t noIdeaWTF = {
//	.reportId = 0x12,
//	.VEN_GamePad0021 = {
//		0x03 , 0xac , 0x39 , 0x84 ,
//		0x20 , 0x70 , 0x08 , 0x25 ,
//		0x00 , 0x00 , 0x00 , 0x00 ,
//		0x00 , 0x00 , 0x00
//	}
//};


featureReport05_t unsure05 = {
	.reportId = 0x05,
	.VEN_GamePad0033 = {
		0xfc , 0xff , 0xf8 , 0xff , 0xff ,
		0xff , 0x73 , 0x22 , 0x82 , 0xdd ,
		0x8f , 0x22 , 0x5a , 0xdd , 0xb9 ,
		0x22 , 0x42 , 0xdd , 0x1c , 0x02 ,
		0x1c , 0x02 , 0xd6 , 0x1f , 0xd5 ,
		0xdf , 0x8e , 0x1f , 0x95 , 0xdf ,
		0x00 , 0x20 , 0xf3 , 0xdf , 0x03 ,
		0x00 , 0x00 , 0x00 , 0x00 , 0x00
	}
};

featureReport20_t unsure20 = {
	.reportId = 0x20,
	.VEN_GamePad0026 = {
		0x4e , 0x6f , 0x76 , 0x20 , 0x32 , 0x30 , 0x20 , 0x32 ,
		0x30 , 0x32 , 0x30 , 0x31 , 0x32 , 0x3a , 0x35 , 0x39 ,
		0x3a , 0x35 , 0x35 , 0x02 , 0x00 , 0x04 , 0x00 , 0x13 ,
		0x03 , 0x00 , 0x00 , 0x37 , 0x00 , 0x00 , 0x01 , 0x41 ,
		0x0a , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ,
		0x00 , 0x00 , 0x00 , 0x10 , 0x02 , 0x00 , 0x00 , 0x2a ,
		0x00 , 0x01 , 0x00 , 0x06 , 0x00 , 0x01 , 0x00 , 0x06 ,
		0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00
	}
	
};

featureReport09_t unsure09 = {
	.reportId = 0x09,
	.VEN_GamePad0024 = {
		0x8c , 0xdc , 0x2b ,
		0x9b , 0xb9 , 0x4c , 0x08 ,
		0x25 , 0x00, 0x85 , 0xcc , 0x44 , 0xc1 , 0x98 , 0x1c
	}
	
};

featureReport82_t unsure82 = {
	.reportId = 0x82,
	.VEN_GamePad002A = {
		0, 0
	}
};

featureReportF2_t unsureF2 = {
	.reportId = 0xf2,
	.VEN_GamePad0032 = {
		0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0
	}
	
};



char rawDualsenseConfig[] = {
	0x09, 0x02, 0xe3, 0x00, 0x04, 0x01, 0x00, 0xc0, 0xfa, 0x09, 0x04, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x0a, 0x24, 0x01, 0x00, 0x01, 0x49, 0x00, 0x02, 0x01, 0x02, 0x0c, 0x24, 0x02, 0x01, 0x01, 0x01, 0x06, 0x04, 0x33, 0x00, 0x00, 0x00, 0x0c, 0x24, 0x06, 0x02, 0x01, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x24, 0x03, 0x03, 0x01, 0x03, 0x04, 0x02, 0x00, 0x0c, 0x24, 0x02, 0x04, 0x02, 0x04, 0x03, 0x02, 0x03, 0x00, 0x00, 0x00, 0x09, 0x24, 0x06, 0x05, 0x04, 0x01, 0x03, 0x00, 0x00, 0x09, 0x24, 0x03, 0x06, 0x01, 0x01, 0x01, 0x05, 0x00, 0x09, 0x04, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x09, 0x04, 0x01, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00, 0x07, 0x24, 0x01, 0x01, 0x01, 0x01, 0x00, 0x0b, 0x24, 0x02, 0x01, 0x04, 0x02, 0x10, 0x01, 0x80, 0xbb, 0x00, 0x09, 0x05, 0x01, 0x09, 0x88, 0x01, 0x04, 0x00, 0x00, 0x07, 0x25, 0x01, 0x00, 0x00, 0x00, 0x00, 0x09, 0x04, 0x02, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x09, 0x04, 0x02, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00, 0x07, 0x24, 0x01, 0x06, 0x01, 0x01, 0x00, 0x0b, 0x24, 0x02, 0x01, 0x02, 0x02, 0x10, 0x01, 0x80, 0xbb, 0x00, 0x09, 0x05, 0x82, 0x05, 0xc4, 0x00, 0x04, 0x00, 0x00, 0x07, 0x25, 0x01, 0x00, 0x00, 0x00, 0x00, 0x09, 0x04, 0x03, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x09, 0x21, 0x11, 0x01, 0x00, 0x01, 0x22, 0x11, 0x01, 0x07, 0x05, 0x84, 0x03, 0x40, 0x00, 0x06, 0x07, 0x05, 0x03, 0x03, 0x40, 0x00, 0x06
};
